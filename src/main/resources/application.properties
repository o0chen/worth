#create 启动时删数据库中的表，然后创建，退出时不删除数据表
#create-drop 启动时删数据库中的表，然后创建，退出时删除数据表 如果表不存在报错
#update 如果启动时表格式不一致则更新表，原有数据保留
#validate 项目启动表结构进行校验 如果不一致则报错
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#格式化sql语句
spring.jpa.hibernate.format-sql=true

spring.jpa.base-package=com.blackeye.worth.**
#指定mysql方言
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#create-if-not-found(默认)：如果通过 @Query指定查询语句，则执行该语句，如果没有，则看看有没有@NameQuery指定的查询语句，如果还没有，则通过解析方法名进行查询
#create：通过解析方法名字来创建查询。即使有 @Query，@NameQuery都会忽略
#use-declared-query：通过执行@Query定义的语句来执行查询，如果没有，则看看有没有通过执行@NameQuery来执行查询，还没有则抛出异常
spring.jpa.query-lookup-strategy=create-if-not-found
spring.jpa.entity-manager-factory-ref =entityManagerFactory
spring.jpa.transaction-manager-ref =transactionManager
# 扫描 Repository Bean 所在的 package, 自定义工厂类
spring.jpa.factory-class=com.blackeye.worth.core.customer.BaseRepositoryFactoryBean

spring.datasource.url=jdbc:mysql://119.23.221.82:3306/worth?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=becl100.


logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG


#security.sysUser.name=default
#security.sysUser.password=123
#security.sysUser.sysRole=ADMIN


spring.thymeleaf.cache=false
## 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template-location=true
#Content-Type值
spring.thymeleaf.servlet.content-type=text/html
#启用MVC Thymeleaf视图分辨率
spring.thymeleaf.enabled=true
## 应该从解决方案中排除的视图名称的逗号分隔列表
##spring.thymeleaf.excluded-view-names=
#模板编码
spring.thymeleaf.mode=LEGACYHTML5
# 在构建URL时预先查看名称的前缀
spring.thymeleaf.prefix=classpath:/templates/
# 构建URL时附加查看名称的后缀.
spring.thymeleaf.suffix=.html
# 链中模板解析器的顺序
#spring.thymeleaf.template-resolver-order= o
# 可以解析的视图名称的逗号分隔列表
#spring.thymeleaf.view-names=
#thymeleaf end



server.port=8081